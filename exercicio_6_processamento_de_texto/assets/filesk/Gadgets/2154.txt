swarms drones flying terrifyingly perfect formation  step closer thanks control algorithm developed mit
the complexities involved controlling teams moving robots crash wipe out other objects/entities cross path hard problem continues roboticists busy
 the te researchers mit reckon they breakthrough that make perfect complex drone formations easier pull off they say their decentralized planning algorithm can handle both stationary and moving obstacles do so reduced computational overheads
why decentralized control algorithms better centralized control algorithms basic answer resilient given centralized algorithm single point failure central controller goes offline
the researchers assert that decentralized algorithms advantage handling erratic communication better centralized algorithms potentially erratic swarm flying robots  flip they are harder design given that all moving pieces  involved doing a bit thinking
in centralized algorithm single entity information finds solution in decentralized algorithm entity (robot partial information environment robots (for example neighbors robots need communicate pass information coordinate explains javier alonso mora the researchers involved developing algorithm
up til now most research decentralized control algorithms focused making collective decision making reliable according group  deferring (hard problem avoiding obstacles have rather chosen drive straight at
the closest applications algorithm  drone swarms navigating formation example surveillance area mapping environment adds alonso mora discussing potential future applications robot teams mobile manipulators collaboratively carrying objects factory floor
last year te demoed centralized version algorithm using pair wheeled robots tasked carrying object video project youtu here
their decentralized algorithm requires say significantly lower communications bandwidth lower computation cost thanks distributed way it makes robots share intel obstacle free regions in immediate vicinity
how does work instead of each robot broadcasting robot a complete map safe space decentralized algorithm robots only share maps immediate neighbors calculate neighbors maps intersect  sharing relevant intersected data neighbor so idea collectively te robots maintains comprehensive map safe terrain while reducing the comms data needed to swarm moving
the robots communicate position obstacles see instead communicate region (set linear constraints/convex region overview ‘free space’ need know obstacles are
this scales scenarios obstacles adds alonso mora
as mapping d space algorithm includes fourth dimension  time  allow swarming bots predict trajectory moving obstacles route formation accordingly
this process does involve guestimation researchers noting works mathematically compact manner assuming moving obstacles constant velocity obviously assumption  true  given robot updates map times second reckon short time span/margin error handle accelerating objects given moving obstacles dramatically change velocity high speeds
so far researchers tested algorithm with simulated drones say came with the flight plans they’d expect centralized control algorithm to
this resulted in squadrons virtual mini helicopters generally maintaining an approximation preferred formation (a square fixed altitude  square rotating to accommodate obstacles and/or distances drones contracting occasionally drones fly single file assume formation pairs flew different altitudes add
they tested decentralized algorithm physical (wheeled robots suggest such scenario  useful use cases teams robots expected to work environments containing humans
we working demonstrator real vehicles similar applications says alonso mora
he adds experiment with actual drones later stage (presumably higher costs involved testing robustness control algorithms if your control robots flying mid air… 
the researchers  presenting paper international conference robotics automation next month expect wait longer perfect formation drones buzzing city
at stage research stresses alonso mora going note many big challenges remain comes creating robust algorithms for controlling robot teams
accounting robot dynamics long term guarantees dynamic environments moving obstacles communication/networking issues real systems perception environment just few
