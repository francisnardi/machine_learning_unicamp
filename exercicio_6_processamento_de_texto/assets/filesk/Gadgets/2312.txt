

hardware hard building hardware startup harder good news staggering innovation rapid prototyping d printing backend service platforms hardware development internet development speeds easy  faster
when started company years ago decided to bootstrap proved actual market product meant build alpha version  engineers free time world then different today  using lean startup method agile development techniques able bridge gap meet goals staying completely self funded
was right time tell  sure lot fun

applying lean startup method best way avoid expensive mistakes hardware startups important makers easy jump straight design implementation  mistake initial definition haunt  hard fix later (much software
to right track fast iterations learn >build >measure goal iteration identify minimum effort maximizes learning decide measuring collect lot feedback digest forward

the basic notion lean startup method technology interesting interesting people product hard grasp engineers  thing matters answering following questions
now ask fastest way answer questions
that right talk potential users customers feel you answers questions justification write line code build prototypes stage need quick iterations interviewing people iteration (or  depending product customers reformulate idea start asking stick process doing remove lot bias maximize learning

once knowledge hand time cracking hardware mvp (minimum viable product  forget maximize learning build final product start asking yourself
you probably number iterations stage clear picture building going use rule thumb does wires sticking rubber bands duct tape you’ve gone far time refine look feel quite  works


congratulations! working prototype somewhat ashamed way looks time throw market

start smaller test sites high chance things working having replace multiple devices having harder time demonstrating immediate value users use time build relationship testers really lucky you’ll build community stay strong support you enter market

after collect data product (usage engagement business (roi price points user personas ready to demanding clients
now time start industrial design process use prototypes to real life testing potential users  sure involve existing customers fast iterate use rapid prototyping technologies experiment radical designs a/b testing  just like software
once design you’ve built electronics support ready beta stage nailed target market customers make sure your beta users target customers  maximize learning try charge participation  great signal problem/solution fit willing pay participate they’ll likely pay product too

your product live real life customers feel like you’ve  truth hard just begun real users bring real problems new demands new use cases new ways break beautiful fragile product (wait want throw puddle
problems happen leverage existing relationships you’ve built order increase learning improve design use react fix improve
in end good relationship customers time shine prove customer support

during process multiple iterations repeatedly replace old versions end boxes boxes old equipment glance wasteful  waste  progress looks like! waste designing final product manufacturing thousands cares use it

you’ve validated design customers users  time make product final touches design start moving small scale large scale manufacturing
focus small details like designing user manual packaging  sure iterate user test stage  unboxing experience important users life cycle brand building onboarding material  crucial increasing users engagement
essentially time focus little details glossed product works fits make sure work wo unnoticed really focus user experience
building hardware hard  applying lean agile methodologies help avoid catastrophic mistakes gain early access customers embrace possibility failure lost  building strong relationship customers help overcome pitfalls arise (and will
like life need plan steps ahead focus step  prepared step times happy building!
