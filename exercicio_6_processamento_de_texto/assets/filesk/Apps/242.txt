

application development long fraught peril projects  bloated expensive ship implementation technologies tend match bloat ranging service oriented architecture (soa business process management (bpm as redpoint tomasz tunguz recently pointed out growth software service slowing and generation applications will weave new workflows existing applications novel ways
the micro trend application development focused delivering bottoms simple solutions complex problems micro services easily integrate multiple systems micro apps present easy consume user interfaces micro flows allow users simply complete tasks systems micro wave triad services apps flows offers new way weave existing systems novel organic ways order deliver solutions immediately
micro services

interoperability apps long holy grail application development heavyweight architectures corba/iiop s evolved soa s implementing soa required enterprise wide mandates coordination payload standards soap heavyweight fraught incompatibilities especially authentication layer
a companies ge discipline implement soa  enterprises soa projects failed gain widespread adoption success constant divestitures acquisitions corporate world soas moving target
over past years micro services  vogue micro services atomic self contained services perform single operation end retrieving customer record common interface micro service known straightforward json/rest/https paradigm authentication straightforward typically easy use api keys
the beauty micro services incredibly easy create deploy share new existing applications easily numerous external internal micro services naysayers correctly point micro services easily propagate like mushrooms fail scale hard share discover problems  corralled policy enterprise heavy handed technology
making easy apps organically communicate spawned new generation app creation delivery far easier enterprises software vendors accelerate new generation applications
micro apps

since introduction ios android app stores  mobile apps taken consumers primary interface computing plethora apps available difficult attract consumers install app device using it common vendors pile bunch features apps retain existing users new functionality attract users result native apps increasingly bloated hard navigate
a new wave micro apps emerging intelligent context aware platforms supporting micro apps range interactive slack facebook messenger bots google interactive answer boxes weather flights micro apps typically single purpose use combination straightforward user interfaces context
facebook messenger micro apps composed rich bubbles menus
micro apps based html load dynamically typically bypassing app stores loading directly existing communication tools like slack facebook messenger definitely pushback natural language aspect bots ability quickly load interactive micro apps directly messengers search results quickly gaining traction facebook messenger particular quickly integrating new features dynamic menus interactive units helping buy shirt ordering pizza
slack director developer relations amit shevat sums micro apps thing really well
micro flows     
       
business process management (bpm tools help organizations implement automation business processes typically expensive long time deploy bpm tools manage long lived workflows requiring combination human interaction machine machine transfers
the foray micro flows companies like ifttt zapier data machine  example moving salesforce closed deal zendesk services popular hit upper bound traction revenue new companies workato extending machine machine workflows saas systems  similar complexity bpm solutions domain specific language suited programmers

a micro flow slack
the new potential micro flows arena human machine interaction messenger platforms like slack skype provide rich interactive html lets users interact end systems opportunity reinvent users interact enterprise software
with micro flows users bypass complex unwieldy legacy systems perform simple actions approvals biggest complaints modern workers particularly younger workers difficulty interacting legacy systems upgraded years like generation x workers wondering typewriters millennials perplexed unnecessarily complicated antiquated systems global  companies
even executives managers benefit micro flows multitude approvals generally require logging systems occasionally use companies multiple systems functions expenses  long term plan consolidate systems micro flows allow executives interact easily multiple systems single interface
because micro flows typically require type interaction user leverage notification features mobile devices messengers simple easy use micro flows make easy fully integrate contributors macro workflow
the combination micro services micro apps micro flows build deliver new paradigm delivering generation apps hopefully learn lessons past try grow micro revolution
