

there abstract notions future infrastructure look like  truth future staring companies face adoption hybrid cloud models containers microservices architectures beginning stages preparing infrastructures future
the largest enterprises experienced volume data companies soon  ingesting evolved meet demands changing needs organizations begin realize power big data learn valuable lessons evolution global giants like google facebook apple
google started premise computer science scale makes intractable tractable underlying google scale supporting infrastructure warehouse sized data centers exabytes storage terabit networks
in recent years shift occurred rendering infrastructure critical consumer web applications  enterprise class problems like big data processing agility needs / availability faster delivery customer engagement social mechanisms real time communications cusp new technologies require infrastructure resources like iot virtual reality
companies approach scaled systems perspectives opportunity primary harnessing data gives company commercial advantage cost designed scale locked certain price point driven hardware resources used elasticity cases workloads irregular prone peaks cases hockey stick growth
while easiest think needs important prioritize stay focused example google scale elasticity critical criterion google launched autocomplete feature guesses individual search typed queries backend increased tenfold elasticity built type project taken years months deploy production
google famously said inside company runs containers sense  process googling is involved container project containers nature lower runtime requirements applications reduces size allows  deployed quickly making better fit new stack
google uses internal cluster operating borg (a reference decidedly unfriendly species star trek generation built manage long running services batch jobs previously handled separate systems babysitter global work queue predecessors early days google strongly influenced borg predated linux control groups
borg shares machines types applications  filling troughs long running services youtu uploads batch jobs logs processing  way increasing resource utilization reducing costs sharing possible container support linux kernel  available enabling better isolation latency sensitive user facing services cpu hungry batch processes
as more applications developed run borg google application infrastructure teams developed tools services systems provided mechanisms configuring updating jobs predicting resource requirements dynamically pushing configuration files running jobs service discovery load balancing auto scaling machine lifecycle management quota management more
similarly today developers build management apis containers machines shifting data centers focus machine application frees application developers ops teams worrying specific details machines operating systems ties telemetry collected management applications machines dramatically improves application monitoring introspection especially scale machine failures maintenance issues cause application instances move
the future near sensor generated data iot data soon swamp kinds data need process collected data real time  self driving cars  kinds retail industrial gamification consumer homes  spur need new degrees agility runtime environment  hybrid aws google cloud azure  balanced terms market share  joined large private clouds industrial automation clouds consumer home clouds
