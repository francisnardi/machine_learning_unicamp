

virtual containers  hottest technologies software development world today
containerization approach virtualization apps components packaged compartmentalized  share common operating environment
since containers share single os kernel efficient hardware virtualization containers introduce revolutionary way make applications portable time decrease virtualization costs orders magnitude
this technology trajectory massively disrupt server virtualization industry aiming to vms vms did physical machines a known illustration shows main differences containers virtual machines (credits docker

 containers technology new surged past years docker silicon valley based company raised  million total january  docker developed open source run time environment containers makes containers easier deploy before
the docker project gained enormous popularity  facto containerization standard supported major operating providers (eg microsoft red hat virtual data center providers (eg vmware cloud service providers (eg google amazon web services microsoft azure rackspace short time span docker engine downloaded  million times k dockerized applications docker hub registry numbers rising daily basis
enterprise adoption containers initial stages recent survey indicated  percent enterprises evaluating using docker  development qa environments number enterprises currently using containers mission critical applications production environment low
the main inhibitors adoption lack operational production tools enterprise grade security start ups growing docker ecosystem aim tackle issue security concerns remain largely unserved
a recent report gartner analyzed docker security measurements concluded work progress far sufficient especially comes management administration like open source projects mass distribution ease use developers adoption steps comes management orchestration large scale operational support security
we believe main platforms docker coreos continue strengthen core security capabilities containers end end enterprise security solution emerge party vendor container security startups forming act accelerators broader adoption container technologies  enterprise customers   months
in addition lack dedicated security tools managing containers verifying development  > production workflow safe elementary security components host hardening continuous risk monitoring threat analysis access control management logging auditing largely missing linux based open source applications selinux apparmor enable enhanced security features  partial solutions quite complex operate
there initial attempts define containers  secured  security operations teams feel left dark regarding  doing wrong enforcing industry best practices containerized applications
container technology raises security challenges entire development lifecycle era continuous deployment developers sharing security responsibilities imply security teams need place controls developers doing simple exercise given point containers is to enable developers ship new software features capabilities fast possible
one leading startups container security market twistlock enables developers security operations teams secure container based applications twistlock security operations teams centrally define container security requirements policies host hardening standards versioning apps containers app configuration settings
these policies enforced development lifecycle locations containers deployed (eg dev workstations test environment aws production environment vmware
the recent openssl vulnerability good example power approach hours disclosure twistlock able detect containers vulnerable libraries prevent running make simple developers ensure compliance deployments going forward
this nascent market evolves at a rapid pace changes ahead number unknowns big various approaches regarding secure containers probably approach prevail
the certain thing currently enterprises lacking proper security capabilities order adopt disruptive technology   months witness rise security segment virtual container ecosystem hype docker hyper growth ecosystem generates going  exciting
